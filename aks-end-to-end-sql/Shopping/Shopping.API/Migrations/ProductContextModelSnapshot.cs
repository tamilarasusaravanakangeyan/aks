// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Shopping.API.Data;

#nullable disable

namespace Shopping.API.Migrations
{
    [DbContext(typeof(ProductContext))]
    partial class ProductContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Shopping.API.Models.Product", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Category")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageFile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = "1",
                            Category = "Category A",
                            Description = "Description of Product 1",
                            ImageFile = "product1.jpg",
                            Name = "Product 1",
                            Price = 100
                        },
                        new
                        {
                            Id = "2",
                            Category = "Category B",
                            Description = "Description of Product 2",
                            ImageFile = "product2.jpg",
                            Name = "Product 2",
                            Price = 200
                        },
                        new
                        {
                            Id = "3",
                            Category = "Category C",
                            Description = "Description of Product 3",
                            ImageFile = "product3.jpg",
                            Name = "Product 3",
                            Price = 300
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
